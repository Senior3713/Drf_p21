docker django
scp, ssh

isort
flake8
poetry
pipenv
5 minute django project
(gitlab, github) ci/cd


DockerFile CMD

docker build -t new_image_1 .

docker run -p 8000:8000 -d new_image_1

docker exec -it 53c7f47985bc sh -c 'python3 manage.py makemigrations && python3 manage.py migrate'



docker compose CMD

docker compose up -d
docker compose up --build
docker compose down
docker compose down -v

docker compose exec -itu postgres postgres_service psql -c 'create database drf_p21;'


docker hub ga yuklash

docker compose build
docker compose push


#Homework
docker compose ga redis,postgres,django


ssh macbook@temur.local
scp .env macbook@temur.local:/Users/macbook/project_test

docker-compose.yaml va .env ni
o'tkazish kk



ssh
scp

docker compose build
docker compose push

docker compose up


ssh wick@164.230.45.12:/home/wick/test_project


scp -r ./*















/etc/nginx/sites-enabled/(nginx_file_nomi)

server {
    listen       8004;
    server_name  45.55.197.128;

    location = /favicon.ico { access_log off; log_not_found off; }

    location /static/ {
        root /var/www/xolmomin/falcon/backend;
    }

    location /media/ {
        root /var/www/xolmomin/falcon/backend;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/var/www/xolmomin/falcon/backend/falcon.sock;
    }

}







/etc/systemd/system/xolmonin_falcon.service


[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/xolmomin/falcon/backend
ExecStart=/var/www/xolmomin/falcon/venv/bin/gunicorn --workers 3 --bind unix:/var/www/xolmomin/falcon/backend/falcon.sock root.wsgi:application

[Install]
WantedBy=multi-user.target



systemctl start (service_fayl_nomi).service
systemctl enable (service_fayl_nomi).service


systemctl start service
systemctl enable service
systemctl stop service
systemctl restart service




1. comp -> github, gitlab, bitbucket -> server

2. comp -> server



scp file root@IP:/var/www
python3 manage.py runserver 0:8004



/etc/nginx/sites-available/falcon
ln -s /etc/nginx/sites-available/falcon /etc/nginx/sites-enabled/

/etc/nginx/sites-enabled/













